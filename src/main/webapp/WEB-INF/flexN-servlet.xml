<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

        <context:component-scan base-package="com.flxn.*"/>

        <mvc:annotation-driven />

        <bean id="messageSystem" class="com.flxn.message.system.MessageSystem"></bean>

        <bean id="dataBaseService" class="com.flxn.service.impl.DataBaseServiceImpl">
            <constructor-arg ref="messageSystem"></constructor-arg>
        </bean>

        <bean id="userService" class="com.flxn.service.impl.UserServiceImpl">
            <constructor-arg ref="messageSystem"></constructor-arg>
        </bean>

        <bean id="dataBaseServiceThread" class="java.lang.Thread">
            <constructor-arg ref="dataBaseService"></constructor-arg>
            <property name="daemon" value="true"></property>
            <property name="name" value="DataBase"></property>
        </bean>

        <bean id="userServiceThread" class="java.lang.Thread">
            <constructor-arg ref="userService"></constructor-arg>
            <property name="daemon" value="true"></property>
            <property name="name" value="UserService"></property>
        </bean>

        <bean id="invokeDataBase" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="targetObject"><ref bean="dataBaseServiceThread"/></property>
            <property name="targetMethod"><value>start</value></property>
        </bean>

        <bean id="invokeUserService" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="targetObject"><ref bean="userServiceThread"/></property>
            <property name="targetMethod"><value>start</value></property>
        </bean>

        <bean id="fakeDB" class="com.flxn.fake.database.FakeDB"></bean>

        <bean id="authenticationService" class="com.flxn.security.TokenAuthenticationService"></bean>

        <bean id="tokenHandler" class="com.flxn.security.TokenHandler" scope="prototype">
            <constructor-arg name="secret" value="tooManySecrets"></constructor-arg>
            <constructor-arg name="userService" ref="userService"></constructor-arg>
        </bean>

        <bean id="authFilter" class="com.flxn.security.AuthFilter" scope="prototype">
            <constructor-arg ref="authenticationService"></constructor-arg>
        </bean>

        <bean id="cache" class="com.flxn.cache.Cache"></bean>

        <bean id="cacheFilter" class="com.flxn.cache.CacheFilter" scope="prototype">
            <constructor-arg ref="cache"></constructor-arg>
        </bean>
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
            <property name="driverClassName" value="org.postgresql.Driver"></property>
            <property name="url" value="jdbc:postgresql://localhost:5432/custom"></property>
            <property name="username" value="postgres"></property>
            <property name="password" value="metalist"></property>
        </bean>
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <property name="dataSource" ref="dataSource"></property>
        </bean>
        <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"></property>
        </bean>
</beans>